{
  "hash": "70ba6c98910218a454d7eb2e3002a644",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Live Markdown to Mermaid Roadmap\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    theme: flatly\njupyter: python3\n---\n\n\n\n\n## 📥 Input: Roadmap in Simple Markdown\n\nThis section contains a bullet-list style roadmap written in Markdown. You can edit this and re-render to update the Mermaid diagram.\n\n::: callout-tip\n**Pro tip:** Use indents to define parent-child relationships.\n:::\n\n::: {#a51e624a .cell execution_count=1}\n``` {}\n# Load the markdown input\ninput_path = \"salmon_data_stewardship_roadmap.md\"\nwith open(input_path, \"r\") as f:\n    md_text = f.read()\nprint(md_text)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n- Metadata Standards\n  - Darwin Core\n  - ISO 19115\n\n```\n:::\n:::\n\n\n:::{#7e6fef2d .cell .markdown}\n## 🔁 Converted Mermaid Flowchart\n:::\n\n::: {#0a9039a7 .cell execution_count=2}\n``` {}\n# Parse the Markdown into Mermaid flowchart\ndef parse_bullets_to_mermaid(md_text):\n    lines = md_text.strip().splitlines()\n    stack = []\n    mermaid_lines = [\"flowchart TD\"]\n    node_counter = 0\n    node_ids = {}\n\n    def get_node_id(text):\n        nonlocal node_counter\n        if text not in node_ids:\n            node_ids[text] = f\"N{node_counter}\"\n            node_counter += 1\n        return node_ids[text]\n\n    for line in lines:\n        if not line.strip().startswith(\"-\"):\n            continue\n        indent_level = len(line) - len(line.lstrip(\" \"))\n        text = line.strip()[2:].strip()\n        current_id = get_node_id(text)\n        mermaid_lines.append(f'{current_id}[\"{text}\"]')\n        if stack and indent_level > stack[-1][0]:\n            parent_id = stack[-1][1]\n            mermaid_lines.append(f\"{parent_id} --> {current_id}\")\n        elif stack and indent_level == stack[-1][0]:\n            if len(stack) > 1:\n                parent_id = stack[-2][1]\n                mermaid_lines.append(f\"{parent_id} --> {current_id}\")\n        stack = stack[:indent_level // 2]\n        stack.append((indent_level, current_id))\n\n    return \"\\n\".join(mermaid_lines)\n\nmermaid_code = parse_bullets_to_mermaid(md_text)\nprint(mermaid_code)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nflowchart TD\nN0[\"Metadata Standards\"]\nN1[\"Darwin Core\"]\nN0 --> N1\nN2[\"ISO 19115\"]\nN0 --> N2\n```\n:::\n:::\n\n\n:::{#45611c85 .cell .markdown}\n## 📊 Mermaid Diagram\n\n\n\n\n```{mermaid}\n{{ mermaid_code }}\n```\n:::\n\n",
    "supporting": [
      "live_md_to_mermaid_files"
    ],
    "filters": [],
    "includes": {}
  }
}